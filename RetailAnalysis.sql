CREATE DATABASE Northwind;
USE Northwind;
CREATE TABLE Customers (
    customerID VARCHAR(5) PRIMARY KEY,
    companyName VARCHAR(40),
    contactName VARCHAR(30),
    contactTitle VARCHAR(60),
    city VARCHAR(15),
    country VARCHAR(15)
);

-- What is the total number of orders placed by all customers?

SELECT count(orderID) AS Total_Orders FROM orders;

-- How many products are available in each category?

SELECT categories.categoryName, COUNT(products.productID)  AS Total_products FROM categories JOIN products ON categories.categoryID = products.categoryID GROUP BY categoryName;

-- Who are the top customers contributing the most revenue to the business?

SELECT customers.customerID, customers.companyName, (order_details.unitPrice*order_details.quantity*(1 - order_details.discount)) AS Revenue FROM customers JOIN orders ON customers.customerID = orders.customerId JOIN order_details ON orders.orderID = order_details.orderID ORDER BY Revenue DESC LIMIT 10; 

-- Which products are the most frequently sold?

SELECT  products.productName, COUNT(order_details.productId) AS No_of_products FROM products JOIN order_details ON products.productID = order_details.productId GROUP BY products.productName LIMIT 3;

-- What is the frequency of customer orders by location, and how does it vary across regions?
SELECT customers.city, customers.country, COUNT(orders.orderID) AS OrderFrequency FROM customers JOIN orders ON customers.customerID = orders.customerID JOIN order_details ON orders.orderID = order_details.orderId GROUP BY customers.country, customers.city ORDER BY customers.country, OrderFrequency DESC;

-- What is the average time taken to ship orders, and how consistent is the shipping process?

SELECT 
    AVG(DATEDIFF(shippedDate, orderDate)) AS AvgShippingTime,
    STDDEV(DATEDIFF(shippedDate, orderDate)) AS StdDevShippingTime
FROM orders
WHERE shippedDate IS NOT NULL 

-- Which products generate the highest revenue, and how does this compare to their sales volume?

SELECT 
    products.productID, 
    products.productName, 
    SUM(order_details.quantity) AS SalesVolume, 
    SUM(order_details.unitPrice * order_details.quantity * (1 - order_details.discount)) AS Revenue
FROM 
    products 
JOIN 
    order_details 
ON 
    products.productID = order_details.productID
GROUP BY 
    products.productID, products.productName
ORDER BY 
    Revenue DESC;

-- Which employee is responsible for handling the most orders, and what is their overall performance?

SELECT 
    employees.employeeName, 
    COUNT(orders.orderID) AS TotalOrders,
    ROUND(SUM(order_details.unitPrice * order_details.quantity * (1 - order_details.discount)),2) AS TotalRevenue
FROM 
    employees
JOIN 
    orders 
ON 
    employees.EmployeeID = orders.EmployeeID
JOIN 
    order_details 
ON 
    orders.OrderID = order_details.OrderID
GROUP BY 
    employees.EmployeeID, EmployeeName
ORDER BY 
    TotalOrders DESC;

-- What is the total revenue generated by each region, and what are the top-performing products in each region?

WITH ProductRevenue AS (
    SELECT 
        customers.city AS Region, 
        products.productName AS Product,
        SUM(order_details.unitPrice * order_details.quantity * (1 - order_details.discount)) AS ProductRevenue
    FROM 
        customers
    JOIN 
        orders ON customers.customerID = orders.customerID
    JOIN 
        order_details ON orders.orderID = order_details.orderID
    JOIN 
        products ON order_details.productID = products.productID
    GROUP BY 
        customers.city, products.productName
),
RegionRevenue AS (
    SELECT 
        Region,
        SUM(ProductRevenue) AS TotalRevenue
    FROM 
        ProductRevenue
    GROUP BY 
        Region
),
TopProduct AS (
    SELECT 
        Region,
        Product,
        ProductRevenue AS TopProductRevenue
    FROM 
        ProductRevenue
    WHERE 
        (Region, ProductRevenue) IN (
            SELECT 
                Region, MAX(ProductRevenue)
            FROM 
                ProductRevenue
            GROUP BY 
                Region
        )
)
SELECT 
    r.Region,
    r.TotalRevenue,
    t.Product AS TopProduct,
    t.TopProductRevenue
FROM 
    RegionRevenue r
JOIN 
    TopProduct t ON r.Region = t.Region
ORDER BY 
    r.TotalRevenue DESC;

-- How does the total revenue differ between orders with discounts and those without discounts? Does applying discounts lead to an overall increase in revenue?
